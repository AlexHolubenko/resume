{"version":3,"file":"static/js/17.e985319c.chunk.js","mappings":";8aAOMA,EAAS,CACbC,WAAY,CACVC,SAAU,kBACVC,OAAQ,4BACRC,MAAO,2BACPC,MAAO,2cACPC,KAAMC,GAERC,WAAY,CACVN,SAAU,aACVC,OAAQ,iCACRC,MAAO,8BACPC,MAAO,qUACPC,KAAMG,IA2DV,EAvDmB,WACjB,OAA8BC,EAAAA,EAAAA,UAAS,cAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KASMC,EAAeC,GAAAA,CAAW,CAC9B,SAAW,EACX,6BAA0C,eAAZH,EAC9B,6BAA0C,eAAZA,IAE1BI,EAAuBD,GAAAA,CAAW,CACtC,mBAAqB,EACrB,oBAAiC,eAAZH,IAEjBK,EAAuBF,GAAAA,CAAW,CACtC,mBAAqB,EACrB,oBAAiC,eAAZH,IAEvB,OACE,iBAAKM,UAAU,MAAMC,QAtBL,SAACC,GAClBP,GAAW,SAAAQ,GACT,MAAY,eAATA,EACM,aAEF,iBAiBR,WACE,gBAAKH,UAAU,kBAAf,UACE,iBAAKA,UAAWJ,EAAhB,WACE,gBAAKI,UAAWF,EAAsBM,IAAKC,KAC3C,gBAAKL,UAAWD,EAAsBK,IAAKE,UAG/C,iBAAKN,UAAU,WAAf,WACE,eAAIA,UAAU,iBAAd,yBACA,iBAAKA,UAAU,aAAf,WACE,gBAAKA,UAAU,oBAAf,SAAoCjB,EAAOW,GAAST,YACpD,gBAAKmB,IAAKrB,EAAOW,GAASL,KAAMW,UAAU,mBAAmBO,IAAI,cACjE,iBAAKP,UAAU,qBAAf,WACE,iBAAMA,UAAU,2BAAhB,qBACA,iBAAMA,UAAU,4BAAhB,SAA6CjB,EAAOW,GAASR,aAE/D,iBAAKc,UAAU,oBAAf,WACE,iBAAMA,UAAU,0BAAhB,oBACA,iBAAMA,UAAU,2BAAhB,SAA4CjB,EAAOW,GAASP,YAE9D,iBAAKa,UAAU,+BAAf,WACA,iBAAMA,UAAU,qCAAhB,+BACE,iBAAMA,UAAU,sCAAhB,SACGjB,EAAOW,GAASN,wCCvE/B,OAOC,WACA,aAEA,IAAIoB,EAAS,GAAGC,eAEhB,SAASZ,IAGR,IAFA,IAAIa,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IACxB,GAAIA,EAAID,OAAQ,CACf,IAAIM,EAAQtB,EAAWuB,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,SAGT,GAAgB,WAAZJ,EACV,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACrC,IAAK,IAAIG,KAAOV,EACXN,EAAOiB,KAAKX,EAAKU,IAAQV,EAAIU,IAChCd,EAAQM,KAAKQ,QAIfd,EAAQM,KAAKF,EAAIO,aAKpB,OAAOX,EAAQgB,KAAK,KAGgBC,EAAOC,SAC3C/B,EAAWgC,QAAUhC,EACrB8B,EAAOC,QAAU/B,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aA5CP","sources":["components/Main/Experience/Experience.js","../node_modules/classnames/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport programmerPhoto from '../../Images/programmerPhoto.png';\nimport sushimakerPhoto from '../../Images/sushimakerPhoto.png';\nimport developerIcon from '../../Images/developer.png';\nimport sushimakerIcon from '../../Images/sushimaker.png';\n\nconst expObj = {\n  programmer: {\n    jobTitle: 'React Developer',\n    period: 'January 2022 - April 2022',\n    place: 'Binariks Training Center',\n    resps: \"Daily sync with a team to provide better efficiency of development. Collaborate with back-end/front-end developers. Work with Jira (estimating time for tasks, dividing tasks to subtask, tracking entire progress of project  and so on.) Creating webpages according to design (work with Figma). Usage of different libraries (classnames, react-redux/-router/ -select/ -table/ -datepicker, sass, redux-thunk). Writing functional requirement documents and guides\",\n    icon: developerIcon,\n  },\n  sushimaker: {\n    jobTitle: 'Sushimaker',\n    period: 'September 2020 - December 2021',\n    place: 'Delivery Sushi&Pizza Yakuza',\n    resps: 'Cutting, slicing, and filleting different types of fish; Inspecting the quality of fruits, vegetables, and fish used to prepare sushi dishes and informing Chef when quality is sub-standard; Preparing various types of sushi dishes according to established guidelines on quality, portion size, presentation, and food safety;',\n    icon: sushimakerIcon,\n  }\n}\n\nconst Experience = () => {\n  const [showJob, setCurrJob] = useState('programmer');\n  const toggleJob = (e) => {\n   setCurrJob(prev => {\n     if(prev === 'programmer') {\n       return 'sushimaker'\n     }\n     return 'programmer'\n   })\n  }\n  const togglerStyle = classNames({\n    'toggler': true,\n    'toggler--programmer-active': showJob === 'programmer',\n    'toggler--sushimaker-active': showJob === 'sushimaker',\n  })\n  const photoProgrammerStyle = classNames({\n    'photo__programmer': true,\n    'current-job-photo': showJob === 'programmer', \n  })\n  const photoSushimakerStyle = classNames({\n    'photo__sushimaker': true,\n    'current-job-photo': showJob === 'sushimaker', \n  })\n  return (\n    <div className=\"exp\" onWheel={toggleJob}>\n      <div className=\"toggler-wrapper\">\n        <div className={togglerStyle}>\n          <img className={photoProgrammerStyle} src={programmerPhoto} />\n          <img className={photoSushimakerStyle} src={sushimakerPhoto} />\n        </div>\n      </div>\n      <div className=\"exp-desc\">\n        <h1 className=\"exp-page-title\">Experience</h1>\n        <div className=\"job-detail\">\n          <div className=\"job-detail__title\">{expObj[showJob].jobTitle}</div>\n          <img src={expObj[showJob].icon} className=\"job-detail__icon\" alt=\"job-icon\"/>\n          <div className=\"job-detail__period\">\n            <span className=\"job-detail__period--prop\">Period</span>\n            <span className=\"job-detail__period--value\">{expObj[showJob].period}</span>\n          </div>\n          <div className=\"job-detail__place\">\n            <span className=\"job-detail__place--prop\">Place</span>\n            <span className=\"job-detail__place--value\">{expObj[showJob].place}</span>\n          </div>\n          <div className=\"job-detail__responsibilities\">\n          <span className=\"job-detail__responsibilities--prop\">Responsibilities</span>\n            <span className=\"job-detail__responsibilities--value\">\n              {expObj[showJob].resps}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Experience;","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["expObj","programmer","jobTitle","period","place","resps","icon","developerIcon","sushimaker","sushimakerIcon","useState","showJob","setCurrJob","togglerStyle","classNames","photoProgrammerStyle","photoSushimakerStyle","className","onWheel","e","prev","src","programmerPhoto","sushimakerPhoto","alt","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default"],"sourceRoot":""}